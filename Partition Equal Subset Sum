
class Solution {
  public:
    bool solve(vector<int>& arr , int i , int target , int sum, vector<vector<int>> &dp){
        if(i>=arr.size() && sum != target) return false ;
        else if(i>=arr.size() && sum == target) return true ;
        else if(sum > target) return false ;
        else if(dp[i][sum] != -1) return dp[i][sum];
        
        bool inc = solve(arr , i+1 , target , sum + arr[i] , dp);
        bool exc = solve(arr , i+1 , target , sum , dp);
        
        return dp[i][sum] = inc || exc;
    }
    bool equalPartition(vector<int>& arr) {
        // code here
        
        int sum = 0 ;
        for(auto i : arr){
            sum += i ; 
        }
        int n = arr.size();
        vector<vector<int>> dp(n , vector<int>((sum/2) + 1, -1));
        if(sum % 2 == 0){
            return solve(arr , 0 , sum/2 , 0 , dp);
        }
        else{
            return false ;
        }
        
    }
};
