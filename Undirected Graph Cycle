class Solution {
  public:
    bool isCycle(int V, vector<vector<int>>& edges) {
        // Code here
        map<int, vector<int>> adj;
        for(auto v:edges){
            adj[v[0]].push_back(v[1]);
            adj[v[1]].push_back(v[0]);
        }
        vector<int> vis(V,0);
        for(int i=0;i<V;i++){
            if(vis[i]==0){
                if(cycle(i, adj, vis)){
                    return true;
                }
            }
        }
        return false;
    }
    bool cycle(int n, map<int, vector<int>> &adj, vector<int> &vis){
        vis[n]=1;
        for(int conn:adj[n]){
            if(vis[conn]==0){
                if(cycle(conn, adj, vis))return true;
            }
            else{
                return true;
            }
        }
        return false;
    }
};
