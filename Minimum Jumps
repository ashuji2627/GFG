class Solution {
  public:
    int minJumps(vector<int>& arr) {
       int n = arr.size();
    if (n <= 1) return 0; // Already at the last index
    if (arr[0] == 0) return -1; // Cannot move forward

    int jumps = 0, farthest = 0, currentEnd = 0;

    for (int i = 0; i < n - 1; i++) {
        farthest = max(farthest, i + arr[i]); // Update farthest reach

        if (i == currentEnd) { // Need to take a jump
            jumps++;
            currentEnd = farthest;
            if (currentEnd >= n - 1) return jumps; // Reached the end
        }
    }
    
    return -1;
    }
};
