class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        // code here
        vector<int> vec;
        int i = 0, j = 0;
        int n = mat.size(), m = mat[0].size();
        while(true)
        {
            if(mat[i][j] >= 0)
            {
                while(j < m && mat[i][j] >= 0)
                {
                    vec.push_back(mat[i][j]);
                    mat[i][j] = -1;
                    j++;
                    
                }
                j--;
                i++;
                while(i < n && mat[i][j] >= 0)
                {
                    vec.push_back(mat[i][j]);
                    mat[i][j] = -1;
                    i++;
                }
                i--;
                j--;
                while(j >= 0 && mat[i][j] >= 0)
                {
                    vec.push_back(mat[i][j]);
                    mat[i][j] = -1;
                    j--;
                }
                j++;
                i--;
                while(i >= 0 && mat[i][j] >= 0)
                {
                    vec.push_back(mat[i][j]);
                    mat[i][j] = -1;
                    i--;
                }
                i++;
                j++;
            }
            else
            {
                return vec;
            }
        }
    }
};
