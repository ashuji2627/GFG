class Solution {
public:
    // Utility to check if a number is prime
    bool isPrime(int n) {
        if (n < 2) return false;
        for (int i = 2; i * i <= n; ++i)
            if (n % i == 0)
                return false;
        return true;
    }

    // Function to find the nearest prime to a given number
    int nearestPrime(int n) {
        if (n <= 2) return 2;
        int left = n, right = n;
        while (true) {
            if (isPrime(left)) return left;
            if (isPrime(right)) return right;
            left--;
            right++;
        }
    }

    // Modify the linked list to replace each value with its nearest prime
    Node *primeList(Node *head) {
        Node* curr = head;
        while (curr) {
            curr->val = nearestPrime(curr->val);
            curr = curr->next;
        }
        return head;
    }
};
